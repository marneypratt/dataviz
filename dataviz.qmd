---
title: "dataviz_NAME"
subtitle: "BIO 131 Intro to Data Visualization"
author: "Your Name Here"
date: "Oct , 2024"
format: 
  html:
    code-overflow: wrap
    embed-resources: true
---

Before you start working, give this file a new name so it doesn't get written over if you accidentally download the GitHub repository a second time. Go to File in the menu and choose "Save as" and then give it the name "dataviz_Name.qmd" (replace "Name" with your full name)

## Load necessary packages

Run the code below at the start of the session to make sure all the necessary packages are loaded.

It is recommended that you put all your code to load packages in one R chunk at the start

```{r}
#| label: setup
#| warning: false
#| message: false

library(tidyverse) ## for readr, dplyr, ggplot2
library(ggbeeswarm) ## for jittering points in a dotplot
library(flextable) ## for making formatted tables that can be pasted into Word or Google Docs
library(ggpubr) ## for making QQ-plots

```

## Import the Water Quality Data

Run the code below to import the water quality data

```{r}
#| label: import data

waterQ <- read_csv("waterQ.csv",
          col_types = cols(
            date = col_date(format = "%Y-%m-%d"), 
            year = col_factor(),
            season = col_factor(levels = c("Summer", "Fall")),
            location = col_factor(levels = c("Downstream","Upstream")),
            microhabitat = col_factor(
              levels = 
                c("DSR", "DFR", "DM", "DSH", "DSP",
                  "USR", "UFR", "UM", "USH", "USU"))
                            ))

```

Use the skills you learned in the "Getting Data into R" tutorial to look at the structure of the dataframe that was just imported.

I personally usually click on the name of the dataframe in the Global Environment as a shortcut to using the View() function, and click on the blue arrow next to the dataframe in the Global Environment to see all the variable names and types

Also click on the Files tab and click on the file called "waterQ_metadata.txt" to see a full description of the data including how to cite the data, what each variable represents, and how measurements were made using what tools.

## How does Paradise Pond affect water quality in the Mill River?

We can use this dataset to look at differences in the water quality upstream versus downstream of Paradise Pond to test for possible effects of the pond on the Mill River.

Keep in mind that Paradise Pond can have effects on the downstream environment beyond sediment redistribution. Sediment redistribution that occurred during the collection of this water quality dataset was in the winter (November-January) of most years starting in 2019. In today's lab, we will be concentrating more on the general effect of the pond rather than from sediment redistribution.

Paradise Pond is an impoundment in the river that slows the flow and makes it more like a pond and less like a river. The water falling over the dam creates a lot of turbulence. How might the slow flow in the pond and/or the turbulence from the water falling over the dam affect the water quality downstream vs upstream?

**Question: Look at the water quality variables and choose ONE that you want to explore today. Type below which variable you chose:**

::: {.callout-note appearance="minimal" icon="false"}
Delete this text and place your answer here
:::

**Question: What do you predict to see in the data comparing the upstream and downstream locations for this variable? (in other words, How do you predict Paradise Pond will affect this variable (if at all)?). Write your prediction and explain why you made that prediction below:**

**For help understanding the variable better and how the pond might affect it, see the [Background Information on Water Quality Measurements](https://docs.google.com/document/d/1j0aGgQS0CMSPLzv-2JTGoWulUJEeRxhiMKhggGTxysU/edit?usp=sharing)**

::: {.callout-note appearance="minimal" icon="false"}
Delete this text and place your answer here
:::

## Missing Data

Does your variable of interest have missing data? Replace the blank in the code below with the column name of your variable of interest to summarize that variable.

Make sure you spell and capitalize the variable name EXACTLY how it is in the waterQ data frame.

```{r}
#| label: Summary of Data

#replace the blank with the column name of your variable
summary(waterQ$____) 

```

If the output is hard to read because of a smaller screen, try clicking the "Show in New Window" pop-out icon in the upper right of the output to open the output in its own window.

**Question: How many NA's (=missing data) does your variable of interest have?**

::: {.callout-note appearance="minimal" icon="false"}
Delete this text and place your answer here
:::

Let's remove the NA's for your variable. Run the code below making sure to replace the blank below with the name of your variable of interest (again, use the exact match to the column name of the variable of interest)

```{r}
#| label: remove NAs

#replace the blank with the column name of your variable
waterQ2 <- waterQ |> 
  filter(!is.na(_____))

```

While this step is not strictly necessary, let's remove some of the columns we don't need to make the data easier to look at. Run the code below making sure to replace the blank below with the name of your variable of interest.

```{r}
#| label: remove unneeded columns

#replace the blank with the column name of your variable
waterQ2 <- waterQ2 |> 
  select(date, year, season, location, sampleID, sampling, microhabitat, quadrat, ___)

```

Look at the new dataset (waterQ2) in the Global Environment. The new number of observations should be the original number minus the number of NA's. The number of variables (=columns) should be 9.

## Descriptive Statistics

Descriptive statistics are useful to understand your data including

-  What is a typical value (mean, median, mode)
-  What is the dispersion - or amount of variability (SD, IQR, Min, Max, Range)
-  What is the sample size within each group (N)

These values also are useful to know to make decisions about how to report your results. For example, the standard deviation (SD) gives the average amount of variability in the data and helps us determine how to round values appropriately. The minimum and maximum values can help you determine what the best values would be for your axis limits on a graph. 

Let's calculate the descriptive statistics for your variable of interest for the Mill River water quality data. Replace the blanks as directed in the comments then run the code below.

```{r}
#| label: descriptive stats

# replace the blank below with a continuous variable you want to summarize
x.var <- "___" 


# replace the blank with the dataframe name where you removed missing values
___  |>  
  # remove missing values from continuous variables
  filter(!is.na(.data[[x.var]])) |> 
  
  # replace the blank with the categorical variable(s)
  group_by(___) |> 
  
  # calculate the descriptive stats
  # do not place anything in the empty parentheses in the n()
  # N represents the sample size within each group
  summarize(Mean = mean(.data[[x.var]]), 
            Median = median(.data[[x.var]]), 
            SD = sd(.data[[x.var]]), 
            IQR = IQR(.data[[x.var]]), 
            Min = min(.data[[x.var]]),
            Max = max(.data[[x.var]]),
            N = n())

```

If the output is hard to read because of a smaller screen, try clicking the "Show in New Window" pop-out icon in the upper right of the output to open the output in its own window.

How do we report these values? We have to round appropriately and include the correct units.

**Question: What units is your variable of interest measured in? (Look at the "waterQ_metadata.txt" file in the dataviz folder and then scroll down to your variable of interest to see what units it was measured in)**

::: {.callout-note appearance="minimal" icon="false"}
Delete this text and place your answer here
:::

How should we round these values?

Note, you can look at the "waterQ_metadata.txt" file in the data folder and then scroll down to your variable of interest to see that level of accuracy the variable was measured to. You can usually go one digit to the right beyond the level of accuracy (because that next digit is the estimated digit) at most. Note that it is okay to be a little more conservative and round more, you just don't want to give the impression that you have more accuracy than you do by giving too many digits.

Personally, I think it is easiest to use the standard deviation (SD) to tell us on average how much variability there is in the data.

Start by rounding the standard deviation (SD) to 2 SIGNIFICANT DIGITS.

We will use the `signif` function with digits=2 to round the SD. replace the blanks below as directed then run the code.

```{r}
#| label: rounded SD

# replace the blank below with a continuous variable of interest
x.var <- "___" 


# replace the blank with the dataframe name where you removed missing values
___  |>   
  # remove missing values from continuous variables
  filter(!is.na(.data[[x.var]])) |> 
  
  # replace the blank with the categorical variable(s)
  group_by(___) |> 
  
  # calculate the SD rounded to 2 significant digits
  summarize(SD = signif(sd(.data[[x.var]]), digits=2))

```

To round other values (mean, median, IQR, etc), round to the same DECIMAL place as the SD rounded to 2 significant figures. Rounding the SD tells us how variable the data are and how many decimals we can report to. Thus, look at what decimal place the SD was rounded to for 2 significant digits.

We will use the `round` function to round our values. This is what the help file says about the `round` function

"`round` rounds the values in its first argument to the specified number of decimal places (default 0). See ‘Details’ about “round to even” when rounding off a 5.

Rounding to a negative number of digits means rounding to a power of ten, so for example round(x, digits = -2) rounds to the nearest hundred."

Use the following for digits in the `round` function

-   rounding to the tens place use digits=-1
-   rounding to the ones place use digits=0
-   rounding to the tenths place use digits=1
-   rounding to the hundredths place use digits=2

```{r}
#| label: rounded descriptive stats

# replace the blank below with a continuous variable you want to summarize
x.var <- "___" 


# replace the blank with the dataframe name where you removed missing values
___  |>  
  # remove missing values from continuous variables
  filter(!is.na(.data[[x.var]])) |> 
  
  # replace the blank with the categorical variable(s)
  group_by(___) |> 
  
  # calculate the descriptive stats
  # replace the blanks with the number of digits 
  # to the right of the decimal place based on the rounded SD
  # the SD is rounded to 2 significant digits using signif  
  # do not place anything in the empty parentheses in the n() 
  # N represents the sample size within each group
  summarize(Mean = round(mean(.data[[x.var]]), digits=__), 
            SD = signif(sd(.data[[x.var]]), digits=2), 
            Median = round(median(.data[[x.var]]), digits=__),
            IQR = round(IQR(.data[[x.var]]), digits=__), 
            Min = round(min(.data[[x.var]]), digits=__),
            Max = round(max(.data[[x.var]]), digits=__),
            N = n())

```

The table we have made is better now that it has rounded values, but it is rarely necessary to report ALL these values. What values should you report when? We will discuss this after we have looked at the data to determine the distribution.

Here are some basic guiding principles for choosing descriptive statistics to report (keep in mind that most statisticians will tell you that you need sample sizes larger than \~30 to get a good estimate for descriptive statistics):

-   Mean and SD are most appropriate when you have a large sample size and the data are reasonably normally distributed
-   Median and IQR are useful for non-normal data with a large sample size (report the IQR as the 25th and 75th percentiles as a hyphenated range, recall that the IQR gives you the middle 50% of the data)
-   For smaller samples, getting a good estimate of these values is more difficult. Thus, you should probably report the median and range to be safe (report the range by giving the min and max)
-   You should always give the sample number within each group (report the N)

Go to the "script_templates" folder in the files tab in the lower right window, then go to the "data_description" folder. Choose the script that will give you the code for the best choice of descriptive statistics to report given your data. Select all and copy the code in the script template. Then paste the code template below and fill in the blanks as directed in the comments.

```{r}
#| label: formatted descriptive stats table






```

**Question: Explain why you chose the descriptive statistics to report that you chose**

::: {.callout-note appearance="minimal" icon="false"}
Delete this text and place your answer here
:::

## Data Visualization & Reporting Results

Next we are going to visualize the data and decide how to best report our results using tables and graphs. 

::: callout-tip
If you would like to really understand how to use ggplot for graphing, then complete the tutorial called [Intro to R for Biology: Graphing with ggplot](https://posit2.smith.edu:3939/r4bio/ggplot/)

(remember to use your smith username without the @smith.edu and usual password to login, and use the [Smith College VPN](https://www.smith.edu/its/tara/networking/vpn.html) if you are off campus to access the tutorial)
:::

Before we make choices about how to best report our results using tables and graphs, it is helpful to understand the distribution of the data.

### Visualizing to Test for Normal Distribution

We are going to use a quantile-quantile plot (Q-Q plot) to visually determine if the distribution of your water quality variable of interest for each group is normal.

Replace the blanks as indicated by the comments and run the code below.

```{r}
#| label: QQ plot

ggpubr::ggqqplot(
  data = ___,    #put the data frame name here 
  "___",         #put the continuous variable name here
  facet.by = "___")  #put the categorical variable here

```

If the data are normally distributed, then the points will generally follow the line and won't go outside the grey 95% confidence intervals.

If you would like to know more about what Q-Q plots are, see [QQ Plot: Uses, Benefits & Interpreting](https://statisticsbyjim.com/graphs/qq-plot/).

**Question: Does the distribution for each location look like a normal distribution?**

::: {.callout-note appearance="minimal" icon="false"}
Delete this text and place your answer here
:::

## Reporting Results

Now that we know whether or not the data are normally distributed (using the Q-Q plot), and we know the sample size of our data (from the full descriptive statistics), we can make some decisions about how to report the results.

### Reporting Descriptive Statistics

There are times when just a graph is sufficient to summarize our data, and reporting the descriptive statistics values is not necessary. But there may also be cases where you want to report values of particular descriptive statistics in a nicely formatted table with rounded values.

Here are some basic guiding principles for choosing descriptive statistics to report (keep in mind that most statisticians will tell you that you need sample sizes within groups larger than around 30 to get a good estimate for descriptive statistics):

-   Mean and SD are most appropriate when you have a large enough sample size and the data are reasonably normally distributed
-   Median and IQR are useful for non-normal data with a large enough sample size (report the IQR as the 25th and 75th percentiles as a hyphenated range)
-   For smaller samples, getting a good estimate of these values is more difficult. Thus, you should probably report the median and range to be safe (report the range by giving the min and max)
-   You should always give the sample number within each group (report the N)

For more information on expectations for this class, see [Reporting Descriptive Statistics](https://docs.google.com/document/d/16tpGHgfl_s3R6m2__G2aCfzoKLH_2KJ1K5cvh_WaEGk/edit?usp=sharing).

Based on the information you have gotten so far in terms of sample size and distribution, decide what descriptive statistics should be reported for your variable of interest.

Go to the "script_templates" folder in the files tab in the lower right window, then go to the "data_description" folder. Choose the script that will give you the code for the best choice of descriptive statistics to report given your data. Select all and copy the code in the script template. Then paste the code template below and fill in the blanks as directed in the comments.

```{r}
#| label: formatted descriptive stats table





```

**Question: Explain why you chose the descriptive statistics to report that you chose**

::: {.callout-note appearance="minimal" icon="false"}
Delete this text and place your answer here
:::

### Choosing the Best Graph

Next we are going to visualize the data and decide how to best graph our results.

::: callout-tip
If you would like to understand how to use ggplot for graphing in some depth, then complete the tutorial called [Intro to R for Biology: Graphing with ggplot](https://posit2.smith.edu:3939/r4bio/ggplot/)

(remember to use your smith username without the @smith.edu and usual password to login, and use the [Smith College VPN](https://www.smith.edu/its/tara/networking/vpn.html) if you are off campus to access the tutorial)
:::

In the final activity for this assignment, you will make a graph that shows the water quality variable you chose for both locations. Think about what type of variables each is (what type of variable is the water quality variable? what type of variable is location?), and then which one should be the dependent variable (on the y-axis) and which should be the independent variable (on the x-axis). We want to know what effect the independent variable has on the dependent variable.

Given what you have learned above (what is the sample size in each group? is your water quality variable normally distributed?), think about what would be the best way to represent the water quality variable Upstream vs Downstream of Paradise Pond in the Mill River. Remember that it is a best practice to include something that shows the distribution of your numerical variables and include a measure of central tendency (mean and/or median as appropriate). You also want to give a measure of dispersion (IQR, SD, range, etc) and/or show all the points. Take a look at this link to remind you of some of the best practices in [choosing a graph type](https://docs.google.com/presentation/d/1qSSHUw_SIXtrRFIxIqa4IfHOwUJetSD9qi6GUC7GsoE/edit?usp=sharing).

Finally, make sure you give an indication of the sample size in each group by either including that on the graph itself (this is more advanced code, so I recommend that you only chose this if you already have some experience graphing in ggplot2 and want to push yourself to learn something more advanced), by writing what the sample size is in the figure legend below the graph (you will write the figure legend in a Google Doc), or include a table of descriptive statistics that includes the sample size. 

Open the "script_templates" folder and look through the script files for the code you want to try. Copy the code of the graph type you think would be best and paste the code in the code chunk below (feel free to try several before you decide which one is best). Replace the blanks in the code as indicated by the surrounding comments.

Tweak the script template code so that it works with your water quality variable of interest. Feel free to play around to see what happens when you remove or change things in the code.

```{r}
#| label: best graph






```


**Question: Explain why you chose the graph that you chose**

::: {.callout-note appearance="minimal" icon="false"}
Delete this text and place your answer here
:::

## Exporting your best graph

How do you save a copy of your graph to use elsewhere?

The simplest thing to do is probably just right-click (Windows) or control-click (Mac) on the graph and select "Copy Image" and then just paste the image where you want it. However, if you want a higher quality image where you can specify the size, image quality, and file type you can use the `ggsave()` function.

When saving with the `ggsave()` function, you need to name the resulting file with surrounding " ", and indicate the size via height, width, and units. Don't forget to save the graph with a dpi call between 300-500 to make it nice and crisp! Look at the `ggsave()` help file for more information and options. 

```{r}
#| label: Save your graph
#| eval: false

# save the graph!
ggsave(filename="datavizGraph.png",  #recommended to use.png or .jpg file types
       height = 7, width = 8, units = "in", 
       dpi = 300)

```

The above code will save the last graph you made and call it "datavizGraph.png". This file will appear in the dataviz folder under the Files tab in the lower right quadrant of this window.

If you are working on the Smith server, you will first need to export this file to your computer:

-   Check the box next to the "datavizGraph.png" file

-   Go to the "More" menu with the gear icon and click the drop down arrow

-   Select "Export" and then save the file to your computer

You can now insert this graph into your Results document (see the lab notebook entry for today for more details).



## Render this File to HTML & Print to PDF

You are now all done with this activity, but you want to make sure to save all your work and put a copy of it in your Individual Google Drive folder for this class (along side your lab notebook). Ultimately, you need a PDF file to put into your lab notebook. 

-   Before you Render

    -   Make sure that each code chunk has an unique label name or no name

    -   Save this file (make sure this file is named "dataviz_YourName.qmd" (replace "YourName" with your full name)

-   Render this Quarto file to HTML (just select the Render menu item at the top of this window)

-   If the HTML file didn't already open in your browser (if it tries to block the pop-up, just tell it to allow it to open), then click on the name of the file in the Files window and select "View in Web Browser"

-   Once the HTML file is open in your web browser, then use the print function within your browser to save it as a PDF. Please name your PDF file "dataviz_YourName.pdf" (replace "YourName" with your full name)

-   Make sure the PDF file is saved somewhere on your computer that you can get to (as with the graph file above, you may need to export this file to your computer if you are working on the Smith server)

-   Place a copy of the PDF file in your INDIVIDUAL Google Drive folder for this class